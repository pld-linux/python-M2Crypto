diff -urN M2Crypto-0.40.1.org/setup.py M2Crypto-0.40.1/setup.py
--- M2Crypto-0.40.1.org/setup.py	2023-10-24 16:05:03.000000000 +0200
+++ M2Crypto-0.40.1/setup.py	2025-04-07 22:57:17.196095606 +0200
@@ -168,6 +168,8 @@
         if sys.version_info[:1] >= (3,):
             self.swig_opts.append('-py3')
 
+        self.swig_opts.append('-Isystem_shadowing')
+
         # swig seems to need the default header file directories
         self.swig_opts.extend(['-I%s' % i for i in _get_additional_includes()])
 
diff -urN M2Crypto-0.40.1.org/system_shadowing/sys/types.h M2Crypto-0.40.1/system_shadowing/sys/types.h
--- M2Crypto-0.40.1.org/system_shadowing/sys/types.h	1970-01-01 01:00:00.000000000 +0100
+++ M2Crypto-0.40.1/system_shadowing/sys/types.h	2025-04-07 22:56:01.584543274 +0200
@@ -0,0 +1 @@
+/* empty */
diff -urN M2Crypto-0.40.1.org/src/SWIG/_lib.i M2Crypto-0.40.1/src/SWIG/_lib.i
--- M2Crypto-0.40.1.org/src/SWIG/_lib.i	2023-10-24 16:55:53.000000000 +0200
+++ M2Crypto-0.40.1/src/SWIG/_lib.i	2025-04-07 23:05:27.739563264 +0200
@@ -351,13 +351,13 @@
     }
 
     if (!warning_raised_exception) {
-        ret = PyEval_CallObject(ssl_verify_cb_func, argv);
+        ret = PyObject_CallObject(ssl_verify_cb_func, argv);
     } else {
         ret = 0;
     }
 
     if (!ret) {
-        /* Got an exception in PyEval_CallObject(), let's fail verification
+        /* Got an exception in PyObject_CallObject(), let's fail verification
          * to be safe.
          */
         cret = 0;
@@ -404,9 +404,9 @@
 
     argv = Py_BuildValue("(iO)", ok, _x509_store_ctx_inst);
 
-    ret = PyEval_CallObject(x509_store_verify_cb_func, argv);
+    ret = PyObject_CallObject(x509_store_verify_cb_func, argv);
     if (!ret) {
-        /* Got an exception in PyEval_CallObject(), let's fail verification
+        /* Got an exception in PyObject_CallObject(), let's fail verification
          * to be safe.
          */
         cret = 0;
@@ -435,7 +435,7 @@
     _SSL = SWIG_NewPointerObj((void *)s, SWIGTYPE_p_SSL, 0);
     argv = Py_BuildValue("(iiO)", where, ret, _SSL);
 
-    retval = PyEval_CallObject(ssl_info_cb_func, argv);
+    retval = PyObject_CallObject(ssl_info_cb_func, argv);
 
     Py_XDECREF(retval);
     Py_XDECREF(argv);
@@ -455,7 +455,7 @@
     _ssl = SWIG_NewPointerObj((void *)ssl, SWIGTYPE_p_SSL, 0);
     argv = Py_BuildValue("(Oii)", _ssl, is_export, keylength);
 
-    ret = PyEval_CallObject(ssl_set_tmp_dh_cb_func, argv);
+    ret = PyObject_CallObject(ssl_set_tmp_dh_cb_func, argv);
 
     if ((SWIG_ConvertPtr(ret, (void **)&dh, SWIGTYPE_p_DH, SWIG_POINTER_EXCEPTION | 0)) == -1)
       dh = NULL;
@@ -479,7 +479,7 @@
     _ssl = SWIG_NewPointerObj((void *)ssl, SWIGTYPE_p_SSL, 0);
     argv = Py_BuildValue("(Oii)", _ssl, is_export, keylength);
 
-    ret = PyEval_CallObject(ssl_set_tmp_rsa_cb_func, argv);
+    ret = PyObject_CallObject(ssl_set_tmp_rsa_cb_func, argv);
 
     if ((SWIG_ConvertPtr(ret, (void **)&rsa, SWIGTYPE_p_RSA, SWIG_POINTER_EXCEPTION | 0)) == -1)
       rsa = NULL;
@@ -499,7 +499,7 @@
 
     cbfunc = (PyObject *)BN_GENCB_get_arg(gencb);
     argv = Py_BuildValue("(ii)", p, n);
-    ret = PyEval_CallObject(cbfunc, argv);
+    ret = PyObject_CallObject(cbfunc, argv);
     PyErr_Clear();
     Py_DECREF(argv);
     Py_XDECREF(ret);
@@ -516,8 +516,8 @@
     gilstate = PyGILState_Ensure();
     cbfunc = (PyObject *)arg;
     argv = Py_BuildValue("(i)", v);
-    /* PyEval_CallObject sets exception, if needed. */
-    ret = PyEval_CallObject(cbfunc, argv);
+    /* PyObject_CallObject sets exception, if needed. */
+    ret = PyObject_CallObject(cbfunc, argv);
     Py_DECREF(argv);
     if (ret == NULL) {
         PyGILState_Release(gilstate);
diff -urN M2Crypto-0.40.1.org/src/SWIG/_m2crypto_wrap.c M2Crypto-0.40.1/src/SWIG/_m2crypto_wrap.c
--- M2Crypto-0.40.1.org/src/SWIG/_m2crypto_wrap.c	2023-10-24 16:11:05.000000000 +0200
+++ M2Crypto-0.40.1/src/SWIG/_m2crypto_wrap.c	2025-04-07 23:05:16.549043427 +0200
@@ -5101,13 +5101,13 @@
     }
 
     if (!warning_raised_exception) {
-        ret = PyEval_CallObject(ssl_verify_cb_func, argv);
+        ret = PyObject_CallObject(ssl_verify_cb_func, argv);
     } else {
         ret = 0;
     }
 
     if (!ret) {
-        /* Got an exception in PyEval_CallObject(), let's fail verification
+        /* Got an exception in PyObject_CallObject(), let's fail verification
          * to be safe.
          */
         cret = 0;
@@ -5154,9 +5154,9 @@
 
     argv = Py_BuildValue("(iO)", ok, _x509_store_ctx_inst);
 
-    ret = PyEval_CallObject(x509_store_verify_cb_func, argv);
+    ret = PyObject_CallObject(x509_store_verify_cb_func, argv);
     if (!ret) {
-        /* Got an exception in PyEval_CallObject(), let's fail verification
+        /* Got an exception in PyObject_CallObject(), let's fail verification
          * to be safe.
          */
         cret = 0;
@@ -5185,7 +5185,7 @@
     _SSL = SWIG_NewPointerObj((void *)s, SWIGTYPE_p_SSL, 0);
     argv = Py_BuildValue("(iiO)", where, ret, _SSL);
 
-    retval = PyEval_CallObject(ssl_info_cb_func, argv);
+    retval = PyObject_CallObject(ssl_info_cb_func, argv);
 
     Py_XDECREF(retval);
     Py_XDECREF(argv);
@@ -5205,7 +5205,7 @@
     _ssl = SWIG_NewPointerObj((void *)ssl, SWIGTYPE_p_SSL, 0);
     argv = Py_BuildValue("(Oii)", _ssl, is_export, keylength);
 
-    ret = PyEval_CallObject(ssl_set_tmp_dh_cb_func, argv);
+    ret = PyObject_CallObject(ssl_set_tmp_dh_cb_func, argv);
 
     if ((SWIG_ConvertPtr(ret, (void **)&dh, SWIGTYPE_p_DH, SWIG_POINTER_EXCEPTION | 0)) == -1)
       dh = NULL;
@@ -5229,7 +5229,7 @@
     _ssl = SWIG_NewPointerObj((void *)ssl, SWIGTYPE_p_SSL, 0);
     argv = Py_BuildValue("(Oii)", _ssl, is_export, keylength);
 
-    ret = PyEval_CallObject(ssl_set_tmp_rsa_cb_func, argv);
+    ret = PyObject_CallObject(ssl_set_tmp_rsa_cb_func, argv);
 
     if ((SWIG_ConvertPtr(ret, (void **)&rsa, SWIGTYPE_p_RSA, SWIG_POINTER_EXCEPTION | 0)) == -1)
       rsa = NULL;
@@ -5249,7 +5249,7 @@
 
     cbfunc = (PyObject *)BN_GENCB_get_arg(gencb);
     argv = Py_BuildValue("(ii)", p, n);
-    ret = PyEval_CallObject(cbfunc, argv);
+    ret = PyObject_CallObject(cbfunc, argv);
     PyErr_Clear();
     Py_DECREF(argv);
     Py_XDECREF(ret);
@@ -5266,8 +5266,8 @@
     gilstate = PyGILState_Ensure();
     cbfunc = (PyObject *)arg;
     argv = Py_BuildValue("(i)", v);
-    /* PyEval_CallObject sets exception, if needed. */
-    ret = PyEval_CallObject(cbfunc, argv);
+    /* PyObject_CallObject sets exception, if needed. */
+    ret = PyObject_CallObject(cbfunc, argv);
     Py_DECREF(argv);
     if (ret == NULL) {
         PyGILState_Release(gilstate);
